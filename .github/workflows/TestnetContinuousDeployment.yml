name: Build, Push Docker and Deploy

on:
  push:
    tags:
      - 'v**'
    branches:
      - 'release/**'

jobs:
  deploy:
    name: Build, Push Docker and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}


      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: treasurenet/ogdatauploader

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          files: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Render Template
        id: template
        uses: chuhlomin/render-template@v1
        with:
          template: .github/deploy.testnet.yaml
          vars: |
            DOCKER_TAG: ${{ steps.meta.outputs.tags }}
            MONGO_URL: ${{ secrets.TESTNET_MONGO_URL }}
            BLOCKCHAIN_NODE_HTTP: ${{ vars.TESTNET_BLOCKCHAIN_NODE_HTTP }}
            TNGATEWAY_ACCESS_TOKEN_URL: ${{ vars.TESTNET_TNGATEWAY_ACCESS_TOKEN_URL }}
            TNGATEWAY_CLIENT_ID: ${{ vars.TESTNET_TNGATEWAY_CLIENT_ID }}
            TNGATEWAY_CLIENT_SECRET: ${{ secrets.TESTNET_TNGATEWAY_CLIENT_SECRET }}
            TNGATEWAY_SCOPE: ${{ vars.TESTNET_TNGATEWAY_SCOPE }}
            TNGATEWAY_API_URL: ${{ vars.TESTNET_TNGATEWAY_API_URL }}
            

      - name: Deploy to the Server(Testnet)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.TESTNET_SERVICES_SERVER_HOST }}
          username: ${{ secrets.TESTNET_SERVICES_SERVER_USER }}
          key: ${{ secrets.TESTNET_SERVICES_SERVER_KEY }}
          script: |
            echo '${{ steps.template.outputs.result }}' > /data/deploy/treasurenet_ogdatauploader_testnet.yaml
            sudo docker-compose -f /data/deploy/treasurenet_ogdatauploader_testnet.yaml down
            sudo docker rmi ${{ steps.meta.outputs.tags }}
            sudo docker-compose -f /data/deploy/treasurenet_ogdatauploader_testnet.yaml up -d
            curl 'https://oapi.dingtalk.com/robot/send?access_token=${{secrets.DINGTALK_ROBOT_TOKEN}}' \
            -H 'Content-Type: application/json' \
            -d '{"msgtype": "text","text": {"content":"[TESTNET]Treasurenet O&G DataUploader Module has been deployed.(FROM GITHUB ACTION)"}}'
            
      

